/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.8.1/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java'
    id 'eclipse'
    id 'jacoco'
    id 'pmd'
    id 'checkstyle'
    id "com.github.spotbugs" version "4.5.1"
    id 'de.aaschmid.cpd' version '3.1'

}

dependencies {
  testCompile 'junit:junit:4.12'
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

test {
    ignoreFailures = true
    finalizedBy jacocoTestReport
    jacoco {
        enabled = true
        destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
        classDumpDir = file("$buildDir/jacoco/classpathdumps")
        output = JacocoTaskExtension.Output.FILE
        address = "localhost"
        port = 6300
        jmx = false
    }
}

task archiveDoc(type: Zip) {
    from '/doc'
    include '*'
    include '*/*'
    archiveName '/doc.zip'
}

checkstyle {
    ignoreFailures = true
}

jacoco {
    toolVersion = "0.8.5"
    reportsDir = file("$buildDir/reports/jacoco")
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.enabled = false
        csv.enabled = false
        html.destination = file("$buildDir/jacocoHtml")
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.1
            }
        }

        rule {
            enabled = false
            element = 'CLASS'
            includes = ['org.gradle.*']

            limit {
                counter = 'LINE'
                value = 'TOTALCOUNT'
                maximum = 0.3
            }
        }
    }
}

pmd {
    consoleOutput = true
    toolVersion = "6.21.0"
    rulePriority = 5
    ignoreFailures = true
    sourceSets = [sourceSets.main]
    ruleSets = [
      "category/java/codestyle.xml",
      "category/java/design.xml",
      "category/java/documentation.xml",
      "category/java/errorprone.xml",
      "category/java/multithreading.xml",
      "category/java/performance.xml",
      "category/java/security.xml",
    ]
}

spotbugs {
    ignoreFailures = true
    showProgress = false
}

cpd {
    ignoreFailures = true
    minimumTokenCount = 10
    ignoreLiterals = false
}
